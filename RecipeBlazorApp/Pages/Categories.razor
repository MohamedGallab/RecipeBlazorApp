@page "/categories"
@inject HttpClient Http

<PageTitle>Categories</PageTitle>

<h1>Categories</h1>

@if (categories == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<div class="row row-cols-auto justify-content-center">
		@foreach (var category in categories)
		{
			<div class="card text-center m-1">
				<div class="card-body">
					<h5 class="card-title">@category</h5>
					<div class="btn-group">
						<button class="btn btn-primary" data-bs-toggle="modal" data-bs-target=@("#editCategoryModal" + category.Replace(" ", string.Empty))>
							<i class="oi oi-pencil"></i>
						</button>
						<button class="btn btn-danger" data-bs-toggle="modal" data-bs-target=@("#deleteCategoryModal" + category.Replace(" ", string.Empty))>
							<i class="oi oi-trash"></i>
						</button>
					</div>
				</div>

				@* Delete Category Modal *@
				<div class="modal fade" id=@("#deleteCategoryModal" + category.Replace(" ", string.Empty)) tabindex="-1" aria-labelledby="deleteCategoryModalLabel" aria-hidden="true">
					<div class="modal-dialog">
						<div class="modal-content">
							<EditForm>
								<DataAnnotationsValidator />
								<ValidationSummary />

							</EditForm>
						</div>
					</div>
				</div>
			</div>
		}
	</div>
}

@code {
	private string exampleModel;
	private List<string>? categories;

	protected override async Task OnInitializedAsync()
	{
		//categories = await Http.GetFromJsonAsync<List<string>>("categories");
		string[] x = { "hi", "lol", "Fr ench", "French2", "French3", "French4", "French5", "French6", "French7" };
		categories = new(x);
	}
}
